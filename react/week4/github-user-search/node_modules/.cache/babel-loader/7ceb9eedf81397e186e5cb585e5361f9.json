{"ast":null,"code":"var _jsxFileName = \"/Users/gizemcandemirkilicoglu/Documents/HackYourFuture/00-homework/hyf-homework/react/week4/github-user-search/src/Contexts/userContext.js\";\nimport React, { useState, useEffect, createContext } from \"react\";\nconst UserContext = createContext();\n\nconst UserContextProvider = props => {\n  const [loading, setLoading] = useState(true);\n  const [query, setQuery] = useState(\"gizem\");\n  const [userList, setUserList] = useState([]); // const [error, setError] = useState(\"\");\n  // const BASEURL = \"https://api.github.com/\";\n\n  const BASE_URL = \"https://api.giphy.com/v1/gifs/search?\";\n  const APP_ID = \"api_key=H8y0gVlIV1y5leb7InXZ28X880GEgcPS\";\n  const searchQuery = \"&q=\" + query;\n  const limitQuery = \"&limit=20\";\n  const searchUrl = BASE_URL + APP_ID + searchQuery + limitQuery;\n\n  const handleQueryChange = e => {\n    setQuery(e.target.value);\n  };\n\n  useEffect(() => {\n    // fetch(`https://api.github.com/search/users?q=${query}`)\n    // fetch(searchUrl)\n    fetch(`https://api.github.com/search/users?q=${query}`).then(userData => userData.json()).then(jsonUserData => {\n      console.log(jsonUserData);\n      setUserList(jsonUserData.items);\n      console.log(userList);\n      setLoading(!loading);\n    }); // .catch(err => {\n    // \tsetError(\"error\");\n    // });\n  }, [query]);\n  return React.createElement(UserContext.Provider, {\n    value: {\n      loading,\n      query,\n      userList,\n      handleQueryChange\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, props.children);\n};\n\nexport { UserContextProvider, UserContext };","map":{"version":3,"sources":["/Users/gizemcandemirkilicoglu/Documents/HackYourFuture/00-homework/hyf-homework/react/week4/github-user-search/src/Contexts/userContext.js"],"names":["React","useState","useEffect","createContext","UserContext","UserContextProvider","props","loading","setLoading","query","setQuery","userList","setUserList","BASE_URL","APP_ID","searchQuery","limitQuery","searchUrl","handleQueryChange","e","target","value","fetch","then","userData","json","jsonUserData","console","log","items","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,aAArC,QAA0D,OAA1D;AACA,MAAMC,WAAW,GAAGD,aAAa,EAAjC;;AAEA,MAAME,mBAAmB,GAAGC,KAAK,IAAI;AACpC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,OAAD,CAAlC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC,CAHoC,CAIpC;AAEA;;AACA,QAAMY,QAAQ,GAAG,uCAAjB;AACA,QAAMC,MAAM,GAAG,0CAAf;AACA,QAAMC,WAAW,GAAG,QAAQN,KAA5B;AACA,QAAMO,UAAU,GAAG,WAAnB;AACA,QAAMC,SAAS,GAAGJ,QAAQ,GAAGC,MAAX,GAAoBC,WAApB,GAAkCC,UAApD;;AAEA,QAAME,iBAAiB,GAAGC,CAAC,IAAI;AAC9BT,IAAAA,QAAQ,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACA,GAFD;;AAIAnB,EAAAA,SAAS,CAAC,MAAM;AACf;AACA;AACAoB,IAAAA,KAAK,CAAE,yCAAwCb,KAAM,EAAhD,CAAL,CACEc,IADF,CACOC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADnB,EAEEF,IAFF,CAEOG,YAAY,IAAI;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;AACAd,MAAAA,WAAW,CAACc,YAAY,CAACG,KAAd,CAAX;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYjB,QAAZ;AACAH,MAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACA,KAPF,EAHe,CAWd;AACA;AACA;AACD,GAdQ,EAcN,CAACE,KAAD,CAdM,CAAT;AAgBA,SACC,oBAAC,WAAD,CAAa,QAAb;AACC,IAAA,KAAK,EAAE;AACNF,MAAAA,OADM;AAENE,MAAAA,KAFM;AAGNE,MAAAA,QAHM;AAINO,MAAAA;AAJM,KADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQEZ,KAAK,CAACwB,QARR,CADD;AAYA,CA7CD;;AA+CA,SAASzB,mBAAT,EAA8BD,WAA9B","sourcesContent":["import React, { useState, useEffect, createContext } from \"react\";\nconst UserContext = createContext();\n\nconst UserContextProvider = props => {\n\tconst [loading, setLoading] = useState(true);\n\tconst [query, setQuery] = useState(\"gizem\");\n\tconst [userList, setUserList] = useState([]);\n\t// const [error, setError] = useState(\"\");\n\n\t// const BASEURL = \"https://api.github.com/\";\n\tconst BASE_URL = \"https://api.giphy.com/v1/gifs/search?\";\n\tconst APP_ID = \"api_key=H8y0gVlIV1y5leb7InXZ28X880GEgcPS\";\n\tconst searchQuery = \"&q=\" + query;\n\tconst limitQuery = \"&limit=20\";\n\tconst searchUrl = BASE_URL + APP_ID + searchQuery + limitQuery;\n\n\tconst handleQueryChange = e => {\n\t\tsetQuery(e.target.value);\n\t};\n\n\tuseEffect(() => {\n\t\t// fetch(`https://api.github.com/search/users?q=${query}`)\n\t\t// fetch(searchUrl)\n\t\tfetch(`https://api.github.com/search/users?q=${query}`)\n\t\t\t.then(userData => userData.json())\n\t\t\t.then(jsonUserData => {\n\t\t\t\tconsole.log(jsonUserData)\n\t\t\t\tsetUserList(jsonUserData.items);\n\t\t\t\tconsole.log(userList)\n\t\t\t\tsetLoading(!loading);\n\t\t\t})\n\t\t\t// .catch(err => {\n\t\t\t// \tsetError(\"error\");\n\t\t\t// });\n\t}, [query]);\n\n\treturn (\n\t\t<UserContext.Provider\n\t\t\tvalue={{\n\t\t\t\tloading,\n\t\t\t\tquery,\n\t\t\t\tuserList,\n\t\t\t\thandleQueryChange\n\t\t\t}}\n\t\t>\n\t\t\t{props.children}\n\t\t</UserContext.Provider>\n\t);\n};\n\nexport { UserContextProvider, UserContext };\n"]},"metadata":{},"sourceType":"module"}