{"ast":null,"code":"var _jsxFileName = \"/Users/gizemcandemirkilicoglu/Documents/HackYourFuture/00-homework/hyf-homework/react/week4/github-user-search/src/Components/UserContext.js\";\nimport React, { useState, useEffect, createContext } from \"react\";\nconst UserContext = createContext();\n\nconst UserProvider = props => {\n  const url = \"https://api.github.com/search/users?q=\";\n  const [loading, setLoading] = useState(true);\n  const [query, setQuery] = useState(\"\");\n  const [userList, setUserList] = useState([]);\n\n  const fetchUserList = async () => {\n    try {\n      const userData = await fetch(url);\n      const {\n        userList\n      } = await userData.json();\n      setUserList(userList);\n      setLoading(false);\n    } catch (e) {\n      if (e) {\n        console.log(e.message, 'Try updating the API key in App.js');\n      }\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      setLoading(true);\n      const searchUrl = `${url}${query}`;\n      const userData = await fetch(searchUrl);\n      const {\n        userList\n      } = await userData.json();\n      console.log(userList);\n      setUserList(userList);\n      setLoading(false);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleQueryChange = e => {\n    setQuery(e.target.value);\n  };\n\n  useEffect(() => {\n    fetchUserList();\n  }, []);\n  return React.createElement(UserContext.Provider, {\n    value: {\n      loading,\n      query,\n      userList,\n      handleQueryChange,\n      handleSubmit\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, props.children);\n};\n\nconst UserConsumer = UserContext.Consumer;\nexport { UserProvider, UserConsumer, UserContext };","map":{"version":3,"sources":["/Users/gizemcandemirkilicoglu/Documents/HackYourFuture/00-homework/hyf-homework/react/week4/github-user-search/src/Components/UserContext.js"],"names":["React","useState","useEffect","createContext","UserContext","UserProvider","props","url","loading","setLoading","query","setQuery","userList","setUserList","fetchUserList","userData","fetch","json","e","console","log","message","handleSubmit","preventDefault","searchUrl","handleQueryChange","target","value","children","UserConsumer","Consumer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,aAArC,QAA0D,OAA1D;AACA,MAAMC,WAAW,GAAGD,aAAa,EAAjC;;AAEA,MAAME,YAAY,GAAGC,KAAK,IAAI;AAC7B,QAAMC,GAAG,GAAG,wCAAZ;AAGA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAOa,aAAa,GAAG,YAAY;AAClC,QAAI;AACH,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACT,GAAD,CAA5B;AACA,YAAM;AAAEK,QAAAA;AAAF,UAAe,MAAMG,QAAQ,CAACE,IAAT,EAA3B;AACAJ,MAAAA,WAAW,CAACD,QAAD,CAAX;AACAH,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA,KALD,CAKE,OAAOS,CAAP,EAAU;AACX,UAAIA,CAAJ,EAAO;AACNC,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,OAAd,EAAuB,oCAAvB;AACA;AACD;AACD,GAXD;;AAaA,QAAMC,YAAY,GAAG,MAAMJ,CAAN,IAAW;AAC/BA,IAAAA,CAAC,CAACK,cAAF;;AACA,QAAI;AACHd,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMe,SAAS,GAAI,GAAEjB,GAAI,GAAEG,KAAM,EAAjC;AACA,YAAMK,QAAQ,GAAG,MAAMC,KAAK,CAACQ,SAAD,CAA5B;AACA,YAAM;AAAEZ,QAAAA;AAAF,UAAe,MAAMG,QAAQ,CAACE,IAAT,EAA3B;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AACAC,MAAAA,WAAW,CAACD,QAAD,CAAX;AACAH,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA,KARD,CAQE,OAAOS,CAAP,EAAU;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA;AACD,GAbD;;AAeA,QAAMO,iBAAiB,GAAGP,CAAC,IAAI;AAC9BP,IAAAA,QAAQ,CAACO,CAAC,CAACQ,MAAF,CAASC,KAAV,CAAR;AACA,GAFD;;AAIAzB,EAAAA,SAAS,CAAC,MAAM;AACfY,IAAAA,aAAa;AACb,GAFQ,EAEN,EAFM,CAAT;AAIA,SACC,oBAAC,WAAD,CAAa,QAAb;AACC,IAAA,KAAK,EAAE;AACNN,MAAAA,OADM;AAENE,MAAAA,KAFM;AAGNE,MAAAA,QAHM;AAINa,MAAAA,iBAJM;AAKNH,MAAAA;AALM,KADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASEhB,KAAK,CAACsB,QATR,CADD;AAaA,CAzDD;;AA2DA,MAAMC,YAAY,GAAGzB,WAAW,CAAC0B,QAAjC;AACA,SAASzB,YAAT,EAAuBwB,YAAvB,EAAqCzB,WAArC","sourcesContent":["import React, { useState, useEffect, createContext } from \"react\";\nconst UserContext = createContext();\n\nconst UserProvider = props => {\n\tconst url = \"https://api.github.com/search/users?q=\";\n\t\n\n\tconst [loading, setLoading] = useState(true);\n\tconst [query, setQuery] = useState(\"\");\n\tconst [userList, setUserList] = useState([]);\n\n\tconst  fetchUserList = async () => {\n\t\ttry {\n\t\t\tconst userData = await fetch(url)\n\t\t\tconst { userList } = await userData.json()\n\t\t\tsetUserList(userList)\n\t\t\tsetLoading(false)\n\t\t} catch (e) {\n\t\t\tif (e) {\n\t\t\t\tconsole.log(e.message, 'Try updating the API key in App.js')\n\t\t\t}\n\t\t}\n\t}\n\n\tconst handleSubmit = async e => {\n\t\te.preventDefault();\n\t\ttry {\n\t\t\tsetLoading(true);\n\t\t\tconst searchUrl = `${url}${query}`;\n\t\t\tconst userData = await fetch(searchUrl);\n\t\t\tconst { userList } = await userData.json();\n\t\t\tconsole.log(userList);\n\t\t\tsetUserList(userList);\n\t\t\tsetLoading(false)\n\t\t} catch (e) {\n\t\t\tconsole.log(e)\n\t\t}\n\t};\n\n\tconst handleQueryChange = e => {\n\t\tsetQuery(e.target.value);\n\t};\n\n\tuseEffect(() => {\n\t\tfetchUserList();\n\t}, []);\n\n\treturn (\n\t\t<UserContext.Provider\n\t\t\tvalue={{\n\t\t\t\tloading,\n\t\t\t\tquery,\n\t\t\t\tuserList,\n\t\t\t\thandleQueryChange,\n\t\t\t\thandleSubmit\n\t\t\t}}\n\t\t>\n\t\t\t{props.children}\n\t\t</UserContext.Provider>\n\t);\n};\n\nconst UserConsumer = UserContext.Consumer;\nexport { UserProvider, UserConsumer, UserContext };\n"]},"metadata":{},"sourceType":"module"}