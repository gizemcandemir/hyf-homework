{"ast":null,"code":"var _jsxFileName = \"/Users/gizemcandemirkilicoglu/Documents/HackYourFuture/00-homework/hyf-homework/react/week4/github-user-search/src/Contexts/userContext.js\";\nimport React, { useState, useEffect, createContext } from \"react\";\nconst UserContext = createContext();\n\nconst UserContextProvider = props => {\n  const [loading, setLoading] = useState(true);\n  const [query, setQuery] = useState(\"\");\n  const [userList, setUserList] = useState([]);\n  const [error, setError] = useState(\"\"); // const BASEURL = \"https://api.github.com/\";\n\n  const BASE_URL = \"https://api.giphy.com/v1/gifs/search?\";\n  const APP_ID = \"api_key=H8y0gVlIV1y5leb7InXZ28X880GEgcPS\";\n  const searchQuery = \"&q=\" + query;\n  const limitQuery = \"&limit=20\";\n  const url = BASE_URL + APP_ID + searchQuery + limitQuery;\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      setLoading(true); // const searchUrl = `${BASEURL}search/users?q=${query}`;\n\n      console.log(url);\n      const userData = await fetch(searchUrl);\n      const {\n        userList\n      } = await userData.json();\n      console.log(userList);\n      setUserList(userList);\n      setLoading(false);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleQueryChange = e => {\n    setQuery(e.target.value);\n  };\n\n  useEffect(() => {\n    fetch(`https://api.github.com/search/users?q=${query}`).then(userData => userData.json()).then(jsonUserData => {\n      setUserList(jsonUserData.items);\n      setLoading(!loading);\n    }).catch(err => {\n      setError(\"error\");\n    });\n  }, [query]);\n  return React.createElement(UserContext.Provider, {\n    value: {\n      loading,\n      query,\n      userList,\n      handleQueryChange,\n      handleSubmit\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, props.children);\n};\n\nexport { UserContextProvider, UserContext };","map":{"version":3,"sources":["/Users/gizemcandemirkilicoglu/Documents/HackYourFuture/00-homework/hyf-homework/react/week4/github-user-search/src/Contexts/userContext.js"],"names":["React","useState","useEffect","createContext","UserContext","UserContextProvider","props","loading","setLoading","query","setQuery","userList","setUserList","error","setError","BASE_URL","APP_ID","searchQuery","limitQuery","url","handleSubmit","e","preventDefault","console","log","userData","fetch","searchUrl","json","handleQueryChange","target","value","then","jsonUserData","items","catch","err","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,aAArC,QAA0D,OAA1D;AACA,MAAMC,WAAW,GAAGD,aAAa,EAAjC;;AAEA,MAAME,mBAAmB,GAAGC,KAAK,IAAI;AACpC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC,CAJoC,CAMpC;;AACA,QAAMc,QAAQ,GAAG,uCAAjB;AACA,QAAMC,MAAM,GAAG,0CAAf;AACA,QAAMC,WAAW,GAAG,QAAQR,KAA5B;AACA,QAAMS,UAAU,GAAG,WAAnB;AACA,QAAMC,GAAG,GAAGJ,QAAQ,GAAGC,MAAX,GAAoBC,WAApB,GAAkCC,UAA9C;;AAGA,QAAME,YAAY,GAAG,MAAMC,CAAN,IAAW;AAC/BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI;AACHd,MAAAA,UAAU,CAAC,IAAD,CAAV,CADG,CAEH;;AACAe,MAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ;AACA,YAAMM,QAAQ,GAAG,MAAMC,KAAK,CAACC,SAAD,CAA5B;AACA,YAAM;AAAEhB,QAAAA;AAAF,UAAe,MAAMc,QAAQ,CAACG,IAAT,EAA3B;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAYb,QAAZ;AACAC,MAAAA,WAAW,CAACD,QAAD,CAAX;AACAH,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA,KATD,CASE,OAAOa,CAAP,EAAU;AACXE,MAAAA,OAAO,CAACC,GAAR,CAAYH,CAAZ;AACA;AACD,GAdD;;AAgBA,QAAMQ,iBAAiB,GAAGR,CAAC,IAAI;AAC9BX,IAAAA,QAAQ,CAACW,CAAC,CAACS,MAAF,CAASC,KAAV,CAAR;AACA,GAFD;;AAIA7B,EAAAA,SAAS,CAAC,MAAM;AACfwB,IAAAA,KAAK,CAAE,yCAAwCjB,KAAM,EAAhD,CAAL,CACEuB,IADF,CACOP,QAAQ,IAAIA,QAAQ,CAACG,IAAT,EADnB,EAEEI,IAFF,CAEOC,YAAY,IAAI;AACrBrB,MAAAA,WAAW,CAACqB,YAAY,CAACC,KAAd,CAAX;AACA1B,MAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACA,KALF,EAME4B,KANF,CAMQC,GAAG,IAAI;AACbtB,MAAAA,QAAQ,CAAC,OAAD,CAAR;AACA,KARF;AASA,GAVQ,EAUN,CAACL,KAAD,CAVM,CAAT;AAYA,SACC,oBAAC,WAAD,CAAa,QAAb;AACC,IAAA,KAAK,EAAE;AACNF,MAAAA,OADM;AAENE,MAAAA,KAFM;AAGNE,MAAAA,QAHM;AAINkB,MAAAA,iBAJM;AAKNT,MAAAA;AALM,KADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASEd,KAAK,CAAC+B,QATR,CADD;AAaA,CA3DD;;AA6DA,SAAShC,mBAAT,EAA8BD,WAA9B","sourcesContent":["import React, { useState, useEffect, createContext } from \"react\";\nconst UserContext = createContext();\n\nconst UserContextProvider = props => {\n\tconst [loading, setLoading] = useState(true);\n\tconst [query, setQuery] = useState(\"\");\n\tconst [userList, setUserList] = useState([]);\n\tconst [error, setError] = useState(\"\");\n\n\t// const BASEURL = \"https://api.github.com/\";\n\tconst BASE_URL = \"https://api.giphy.com/v1/gifs/search?\";\n\tconst APP_ID = \"api_key=H8y0gVlIV1y5leb7InXZ28X880GEgcPS\";\n\tconst searchQuery = \"&q=\" + query;\n\tconst limitQuery = \"&limit=20\";\n\tconst url = BASE_URL + APP_ID + searchQuery + limitQuery;\n\n\n\tconst handleSubmit = async e => {\n\t\te.preventDefault();\n\t\ttry {\n\t\t\tsetLoading(true);\n\t\t\t// const searchUrl = `${BASEURL}search/users?q=${query}`;\n\t\t\tconsole.log(url);\n\t\t\tconst userData = await fetch(searchUrl);\n\t\t\tconst { userList } = await userData.json();\n\t\t\tconsole.log(userList);\n\t\t\tsetUserList(userList);\n\t\t\tsetLoading(false);\n\t\t} catch (e) {\n\t\t\tconsole.log(e);\n\t\t}\n\t};\n\n\tconst handleQueryChange = e => {\n\t\tsetQuery(e.target.value);\n\t};\n\n\tuseEffect(() => {\n\t\tfetch(`https://api.github.com/search/users?q=${query}`)\n\t\t\t.then(userData => userData.json())\n\t\t\t.then(jsonUserData => {\n\t\t\t\tsetUserList(jsonUserData.items);\n\t\t\t\tsetLoading(!loading);\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tsetError(\"error\");\n\t\t\t});\n\t}, [query]);\n\n\treturn (\n\t\t<UserContext.Provider\n\t\t\tvalue={{\n\t\t\t\tloading,\n\t\t\t\tquery,\n\t\t\t\tuserList,\n\t\t\t\thandleQueryChange,\n\t\t\t\thandleSubmit\n\t\t\t}}\n\t\t>\n\t\t\t{props.children}\n\t\t</UserContext.Provider>\n\t);\n};\n\nexport { UserContextProvider, UserContext };\n"]},"metadata":{},"sourceType":"module"}