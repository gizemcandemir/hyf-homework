{"ast":null,"code":"var _jsxFileName = \"/Users/gizemcandemirkilicoglu/Documents/HackYourFuture/00-homework/hyf-homework/react/week4/github-user-search/src/Contexts/userContext.js\";\nimport React, { useState, useEffect, createContext } from \"react\";\nconst UserContext = createContext();\n\nconst UserContextProvider = props => {\n  const BASEURL = \"https://api.github.com/\";\n  const [loading, setLoading] = useState(true);\n  const [query, setQuery] = useState(\"\");\n  const [userList, setUserList] = useState([]);\n  const [error, setError] = useState(\"\");\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      setLoading(true);\n      const searchUrl = `${BASEURL}search/users?q=${query}`;\n      console.log(searchUrl);\n      const userData = await fetch(searchUrl);\n      const {\n        userList\n      } = await userData.json();\n      console.log(userList);\n      setUserList(userList);\n      setLoading(false);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleQueryChange = e => {\n    setQuery(e.target.value);\n  };\n\n  useEffect(() => {\n    fetch(`https://api.github.com/search/users?q=${query}`).then(userData => userData.json()).then(jsonUserData => {\n      setUserList(jsonUserData.items);\n      setLoading(!loading);\n    }).catch(err => {\n      setError(\"error\");\n    });\n  }, [query]);\n  return React.createElement(UserContext.Provider, {\n    value: {\n      loading,\n      query,\n      userList,\n      handleQueryChange,\n      handleSubmit\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, props.children);\n};\n\nexport { UserContextProvider, UserContext };","map":{"version":3,"sources":["/Users/gizemcandemirkilicoglu/Documents/HackYourFuture/00-homework/hyf-homework/react/week4/github-user-search/src/Contexts/userContext.js"],"names":["React","useState","useEffect","createContext","UserContext","UserContextProvider","props","BASEURL","loading","setLoading","query","setQuery","userList","setUserList","error","setError","handleSubmit","e","preventDefault","searchUrl","console","log","userData","fetch","json","handleQueryChange","target","value","then","jsonUserData","items","catch","err","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,aAArC,QAA0D,OAA1D;AACA,MAAMC,WAAW,GAAGD,aAAa,EAAjC;;AAEA,MAAME,mBAAmB,GAAGC,KAAK,IAAI;AACpC,QAAMC,OAAO,GAAG,yBAAhB;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMe,YAAY,GAAG,MAAMC,CAAN,IAAW;AAC/BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI;AACHT,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMU,SAAS,GAAI,GAAEZ,OAAQ,kBAAiBG,KAAM,EAApD;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACA,YAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACJ,SAAD,CAA5B;AACA,YAAM;AAAEP,QAAAA;AAAF,UAAe,MAAMU,QAAQ,CAACE,IAAT,EAA3B;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAYT,QAAZ;AACAC,MAAAA,WAAW,CAACD,QAAD,CAAX;AACAH,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA,KATD,CASE,OAAOQ,CAAP,EAAU;AACXG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,CAAZ;AACA;AACD,GAdD;;AAgBA,QAAMQ,iBAAiB,GAAGR,CAAC,IAAI;AAC9BN,IAAAA,QAAQ,CAACM,CAAC,CAACS,MAAF,CAASC,KAAV,CAAR;AACA,GAFD;;AAIAzB,EAAAA,SAAS,CAAC,MAAM;AACfqB,IAAAA,KAAK,CAAE,yCAAwCb,KAAM,EAAhD,CAAL,CACEkB,IADF,CACON,QAAQ,IAAIA,QAAQ,CAACE,IAAT,EADnB,EAEEI,IAFF,CAEOC,YAAY,IAAI;AACrBhB,MAAAA,WAAW,CAACgB,YAAY,CAACC,KAAd,CAAX;AACArB,MAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACA,KALF,EAMEuB,KANF,CAMQC,GAAG,IAAI;AACTjB,MAAAA,QAAQ,CAAC,OAAD,CAAR;AACJ,KARF;AASA,GAVQ,EAUN,CAACL,KAAD,CAVM,CAAT;AAaA,SACC,oBAAC,WAAD,CAAa,QAAb;AACC,IAAA,KAAK,EAAE;AACNF,MAAAA,OADM;AAENE,MAAAA,KAFM;AAGNE,MAAAA,QAHM;AAINa,MAAAA,iBAJM;AAKNT,MAAAA;AALM,KADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASEV,KAAK,CAAC2B,QATR,CADD;AAaA,CArDD;;AAwDA,SAAS5B,mBAAT,EAA8BD,WAA9B","sourcesContent":["import React, { useState, useEffect, createContext } from \"react\";\nconst UserContext = createContext();\n\nconst UserContextProvider = props => {\n\tconst BASEURL = \"https://api.github.com/\";\n\tconst [loading, setLoading] = useState(true);\n\tconst [query, setQuery] = useState(\"\");\n\tconst [userList, setUserList] = useState([]);\n\tconst [error, setError] = useState(\"\");\n\n\tconst handleSubmit = async e => {\n\t\te.preventDefault();\n\t\ttry {\n\t\t\tsetLoading(true);\n\t\t\tconst searchUrl = `${BASEURL}search/users?q=${query}`;\n\t\t\tconsole.log(searchUrl)\n\t\t\tconst userData = await fetch(searchUrl);\n\t\t\tconst { userList } = await userData.json();\n\t\t\tconsole.log(userList);\n\t\t\tsetUserList(userList);\n\t\t\tsetLoading(false)\n\t\t} catch (e) {\n\t\t\tconsole.log(e)\n\t\t}\n\t};\n\n\tconst handleQueryChange = e => {\n\t\tsetQuery(e.target.value);\n\t};\n\n\tuseEffect(() => {\n\t\tfetch(`https://api.github.com/search/users?q=${query}`)\n\t\t\t.then(userData => userData.json())\n\t\t\t.then(jsonUserData => {\n\t\t\t\tsetUserList(jsonUserData.items)\n\t\t\t\tsetLoading(!loading)\n\t\t\t})\n\t\t\t.catch(err => {\n        setError(\"error\");\n\t\t\t});\n\t}, [query]);\n\n\n\treturn (\n\t\t<UserContext.Provider\n\t\t\tvalue={{\n\t\t\t\tloading,\n\t\t\t\tquery,\n\t\t\t\tuserList,\n\t\t\t\thandleQueryChange,\n\t\t\t\thandleSubmit\n\t\t\t}}\n\t\t>\n\t\t\t{props.children}\n\t\t</UserContext.Provider>\n\t);\n};\n\n\nexport { UserContextProvider, UserContext};\n"]},"metadata":{},"sourceType":"module"}