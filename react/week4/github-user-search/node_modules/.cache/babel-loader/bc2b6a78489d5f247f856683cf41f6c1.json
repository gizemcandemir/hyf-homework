{"ast":null,"code":"var _jsxFileName = \"/Users/gizemcandemirkilicoglu/Documents/HackYourFuture/00-homework/hyf-homework/react/week4/github-user-search/src/Context/index.js\";\nimport React, { createContext, useEffect } from \"react\";\nconst UserContext = createContext();\nconst [UserProvider, UserConsumer] = UserContext;\n\nconst RecipeProvider = props => {\n  const url = \"https://api.github.com/search/users?q=\";\n  const [loading, setLoading] = useState(true);\n  const [query, setQuery] = useState(\"\");\n  const [userList, setUserList] = useState([]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      const searchUrl = `${url}${query}`;\n      const userData = await fetch(searchUrl);\n      const {\n        users\n      } = await userData.json();\n      setUserList(users);\n      setLoading(false);\n      console.log(users);\n    } catch (e) {\n      if (e) {\n        console.log(e.message, \"Try updating the API ke in App.js\");\n      }\n    }\n  };\n\n  const handleQueryChange = e => {\n    setQuery(e.target.value);\n  };\n\n  useEffect(() => {\n    handleSubmit();\n  }, []);\n  return React.createElement(UserProvider, {\n    value: {\n      loading,\n      query,\n      userList,\n      handleQueryChange,\n      handleSubmit\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, props.children);\n};\n\nexport { UserProvider, UserConsumer, UserContext };","map":{"version":3,"sources":["/Users/gizemcandemirkilicoglu/Documents/HackYourFuture/00-homework/hyf-homework/react/week4/github-user-search/src/Context/index.js"],"names":["React","createContext","useEffect","UserContext","UserProvider","UserConsumer","RecipeProvider","props","url","loading","setLoading","useState","query","setQuery","userList","setUserList","handleSubmit","e","preventDefault","searchUrl","userData","fetch","users","json","console","log","message","handleQueryChange","target","value","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,QAAgD,OAAhD;AACA,MAAMC,WAAW,GAAGF,aAAa,EAAjC;AACA,MAAM,CAACG,YAAD,EAAeC,YAAf,IAA+BF,WAArC;;AAEA,MAAMG,cAAc,GAAGC,KAAK,IAAI;AAC/B,QAAMC,GAAG,GAAG,wCAAZ;AAEA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBC,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBF,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMK,YAAY,GAAG,MAAMC,CAAN,IAAW;AAC/BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI;AACH,YAAMC,SAAS,GAAI,GAAEX,GAAI,GAAEI,KAAM,EAAjC;AACA,YAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAACF,SAAD,CAA5B;AACA,YAAM;AAAEG,QAAAA;AAAF,UAAY,MAAMF,QAAQ,CAACG,IAAT,EAAxB;AACAR,MAAAA,WAAW,CAACO,KAAD,CAAX;AACAZ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAc,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA,KAPD,CAOE,OAAOL,CAAP,EAAU;AACX,UAAIA,CAAJ,EAAO;AACNO,QAAAA,OAAO,CAACC,GAAR,CAAYR,CAAC,CAACS,OAAd,EAAuB,mCAAvB;AACA;AACD;AACD,GAdD;;AAgBA,QAAMC,iBAAiB,GAAGV,CAAC,IAAI;AAC9BJ,IAAAA,QAAQ,CAACI,CAAC,CAACW,MAAF,CAASC,KAAV,CAAR;AACA,GAFD;;AAIA3B,EAAAA,SAAS,CAAC,MAAM;AACfc,IAAAA,YAAY;AACZ,GAFQ,EAEN,EAFM,CAAT;AAIA,SACC,oBAAC,YAAD;AACC,IAAA,KAAK,EAAE;AACNP,MAAAA,OADM;AAENG,MAAAA,KAFM;AAGNE,MAAAA,QAHM;AAINa,MAAAA,iBAJM;AAKNX,MAAAA;AALM,KADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASET,KAAK,CAACuB,QATR,CADD;AAaA,CA5CD;;AA8CA,SAAS1B,YAAT,EAAuBC,YAAvB,EAAqCF,WAArC","sourcesContent":["import React, { createContext, useEffect } from \"react\";\nconst UserContext = createContext();\nconst [UserProvider, UserConsumer] = UserContext;\n\nconst RecipeProvider = props => {\n\tconst url = \"https://api.github.com/search/users?q=\";\n\n\tconst [loading, setLoading] = useState(true);\n\tconst [query, setQuery] = useState(\"\");\n\tconst [userList, setUserList] = useState([]);\n\n\tconst handleSubmit = async e => {\n\t\te.preventDefault();\n\t\ttry {\n\t\t\tconst searchUrl = `${url}${query}`;\n\t\t\tconst userData = await fetch(searchUrl);\n\t\t\tconst { users } = await userData.json();\n\t\t\tsetUserList(users);\n\t\t\tsetLoading(false);\n\t\t\tconsole.log(users);\n\t\t} catch (e) {\n\t\t\tif (e) {\n\t\t\t\tconsole.log(e.message, \"Try updating the API ke in App.js\");\n\t\t\t}\n\t\t}\n\t};\n\n\tconst handleQueryChange = e => {\n\t\tsetQuery(e.target.value);\n\t};\n\n\tuseEffect(() => {\n\t\thandleSubmit();\n\t}, []);\n\n\treturn (\n\t\t<UserProvider\n\t\t\tvalue={{\n\t\t\t\tloading,\n\t\t\t\tquery,\n\t\t\t\tuserList,\n\t\t\t\thandleQueryChange,\n\t\t\t\thandleSubmit\n\t\t\t}}\n\t\t>\n\t\t\t{props.children}\n\t\t</UserProvider>\n\t);\n};\n\nexport { UserProvider, UserConsumer, UserContext };\n"]},"metadata":{},"sourceType":"module"}